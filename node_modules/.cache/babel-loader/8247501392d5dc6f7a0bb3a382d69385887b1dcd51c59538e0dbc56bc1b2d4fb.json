{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\Weather App\\\\react-weather-app\\\\react-weather-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport React, { useState } from 'react';\n//the useState hook allows functional components to manage state\nimport axios from 'axios';\n//axios is used for making HTTP requests, it simpliefies the process of making asynchronous requests in JavaScript\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  //declare functional component named App \n  //functional components are JavaScript functions that return JSX(JavaScript XML), which represents the UI of the component\n  useEffect(() => {\n    document.title = \"Weather App\";\n  }, []);\n  const [city, setCity] = useState(''); //city is initialised to empty string, setCity is used to update it\n\n  const [weather, setWeather] = useState(null); //weather is declared, setWeather is used to update it\n\n  const apiKey = '1ccc73b386fa474b95e31343241202';\n  const fetchWeather = async () => {\n    //fetchWeather is responsible for fetching weather data from WeatherAPI.com\n    try {\n      const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=1ccc73b386fa474b95e31343241202&q=${city}&aqi=no`); //sends an HTTP 'get' request to the API using axios. \n      //Awaits the response and stores it in the 'response' variable. apiKey and city are interpolated into the URL to request specific data.\n\n      setWeather(response.data); //updates weather state variable with the retrieved data (contained in response.data)\n    } catch (error) {\n      console.error('Error fetching weather data: ', error); //logs message to console if there is any errors \n      setWeather(null);\n    }\n  };\n  const handleKeyPress = event => {\n    if (event.key === 'Enter') {\n      fetchWeather();\n    }\n  };\n\n  //this block of JSX represents the UI of the 'App' component. \n  //It consists of a input field to enter city name, button to fetch weather data and a section to display weather info \n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weather-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"heading\",\n      children: \"Weather App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: city,\n        onChange: e => setCity(e.target.value),\n        onKeyPress: handleKeyPress,\n        placeholder: \"Enter city name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"search-button\",\n      onClick: fetchWeather,\n      children: \"Get Weather Info\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), weather &&\n    /*#__PURE__*/\n    //if weather = true then the below block is displayed (weather && checks this condition)\n    _jsxDEV(\"div\", {\n      className: \"weather-data-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-location\",\n        children: [weather.location.name, \", \", weather.location.country]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-temperature\",\n        children: [\"Temperature (in Celsius): \", weather.current.temp_c, \"\\xB0C\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-temperature\",\n        children: [\"Temperature (in Fahrenheit): \", weather.current.temp_f, \"\\xB0F\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-condition\",\n        children: [\"Condition: \", weather.current.condition.text]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"b7lHPUU/gTAED78zrmOd1JUf0g0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","useEffect","document","title","city","setCity","weather","setWeather","apiKey","fetchWeather","response","get","data","error","console","handleKeyPress","event","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","onKeyPress","placeholder","onClick","location","name","country","current","temp_c","temp_f","condition","text","_c","$RefreshReg$"],"sources":["D:/Projects/Weather App/react-weather-app/react-weather-app/src/App.js"],"sourcesContent":["import './App.css';\nimport React, {useState} from 'react';\n//the useState hook allows functional components to manage state\nimport axios from 'axios'\n//axios is used for making HTTP requests, it simpliefies the process of making asynchronous requests in JavaScript\n\nfunction App(){//declare functional component named App \n//functional components are JavaScript functions that return JSX(JavaScript XML), which represents the UI of the component\n    useEffect(() => {\n    document.title = \"Weather App\";\n    }, []);\n    const [city, setCity] = useState('');//city is initialised to empty string, setCity is used to update it\n    \n    const [weather, setWeather] = useState(null);//weather is declared, setWeather is used to update it\n\n    const apiKey = '1ccc73b386fa474b95e31343241202';\n\n    const fetchWeather = async () => {//fetchWeather is responsible for fetching weather data from WeatherAPI.com\n        try{\n            const response = await axios.get(`https://api.weatherapi.com/v1/current.json?key=1ccc73b386fa474b95e31343241202&q=${city}&aqi=no`); //sends an HTTP 'get' request to the API using axios. \n            //Awaits the response and stores it in the 'response' variable. apiKey and city are interpolated into the URL to request specific data.\n            \n            setWeather(response.data);//updates weather state variable with the retrieved data (contained in response.data)\n        }\n        catch(error){\n            console.error('Error fetching weather data: ', error); //logs message to console if there is any errors \n            setWeather(null);\n        }\n    };\n    const handleKeyPress = (event) => {\n      if (event.key === 'Enter') {\n        fetchWeather();\n      }\n    };\n\n    //this block of JSX represents the UI of the 'App' component. \n    //It consists of a input field to enter city name, button to fetch weather data and a section to display weather info \n    return (\n        <div className=\"weather-container\">\n        <h1 className=\"heading\">Weather App</h1>\n        <div className=\"input-container\">\n        <input \n            type=\"text\"\n            value={city}\n            onChange={(e) => setCity(e.target.value)}\n            onKeyPress={handleKeyPress}\n            placeholder=\"Enter city name\"\n        />\n        </div>\n        <button className=\"search-button\" onClick={fetchWeather}>Get Weather Info</button>\n        \n        {weather && ( //if weather = true then the below block is displayed (weather && checks this condition)\n            <div className=\"weather-data-container\">\n            <div className=\"weather-location\">{weather.location.name}, {weather.location.country}</div>\n            <div className=\"weather-temperature\">Temperature (in Celsius): {weather.current.temp_c}°C</div>\n            <div className=\"weather-temperature\">Temperature (in Fahrenheit): {weather.current.temp_f}°F</div>\n            <div className=\"weather-condition\">Condition: {weather.current.condition.text}</div>\n            </div>\n\n        )}\n        </div>\n    );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}